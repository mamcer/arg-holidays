<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QDIRXhpZgAASUkqAAgAAAAHAD4BBQACAAAAYgAAAD8BBQAGAAAA
        cgAAAAEDBQABAAAAogAAAAIDAgAWAAAAqgAAABBRAQABAAAAAQBfABFRBAABAAAAEwsAABJRBAABAAAA
        EwsAAAAAAAAlegAAoIYBAIOAAACghgEA//kAAKCGAQDpgAAAoIYBADB1AACghgEAYOoAAKCGAQCYOgAA
        oIYBAG8XAACghgEAoIYBAI6xAABQaG90b3Nob3AgSUNDIHByb2ZpbGUA/+IMWElDQ19QUk9GSUxFAAEB
        AAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAA
        AAAAAAAAAAEAAPbWAAEAAAAA0y1IUCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAU
        clhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACI
        dnVlZAAAA0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAM
        clRSQwAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5
        OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAA
        AAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVog
        AAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj
        AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMu
        Y2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAu
        SUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVD
        IDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEA
        AAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVog
        AAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAA
        Q1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBo
        AG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEB
        AQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHR
        AdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALr
        AvUDAAMLAxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARV
        BGMEcQR+BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYW
        BicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgy
        CEYIWghuCIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAqu
        CsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2O
        DakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDX
        EPURExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL
        FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihiv
        GNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1H
        HXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJV
        IoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfc
        KA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3h
        LhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRl
        NJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtr
        O6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3
        QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsM
        S1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1Oq
        U/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzW
        XSddeF3JXhpebF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaS
        ZuhnPWeTZ+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDg
        cTpxlXHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vC
        fCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7
        h5+IBIhpiM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NN
        k7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6
        oGmg2KFHobaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1E
        rbiuLa6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu
        u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5
        yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo
        2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui8
        6Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4
        +cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgX
        FBYWGh0lHxobIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgAaQBpAwEiAAIRAQMR
        Af/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
        EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElK
        U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAAB
        AgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkj
        M1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5
        eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
        5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+VKKKKACiiigAooooAKKKKACilrW0fw7qus6dql9pdm1
        zb6ZGst35brvjRjjdszuZQepUEL1OBQBkUUv4UUAJRRRQAUUUUAFFPijeaRY4kZ3bgKoyT+FNII6igBK
        3PCXhPXPF+qDT/Dmm3F9dYywjGFQerMcKo9yRXpHwP8AgfqXxCKapqbyab4bV8eft/e3OD8wiB4wOQXO
        QDwAxBA+1/CfhjRvCWkR6Z4e0+Cxs052xjl2xjczHlmwBySTxQB8hp+yt42aJWOp+HkcjJRp5uPYkRda
        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
</value>
  </data>
</root>